name: test-build

on:
  push:
  pull_request:

jobs:
  run_tests:
    runs-on: ubuntu-latest
    name: x86 Ubuntu 14.04
    container:
      image: docker.io/library/ubuntu:14.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install CERE dependencies
        run: |
          apt-get -y update
          apt-get -y install clang-3.4 llvm-3.4-dev \
          gcc-4.6 g++-4.6 gfortran-4.6 autoconf automake build-essential libtool ruby-ronn \
          python python-matplotlib python-jinja2 python-pydot python-pygraphviz \
          python-sklearn python-numpy python-networkx python-pip google-perftools \
          libgoogle-perftools-dev numactl dc python3-pip git libgmp3-dev gcc-4.6-plugin-dev \
          libgfortran3 libgfortran-4.8-dev libgmp3-dev wget opt

      - name: LLVM symlinks
        run: |
          ln -s /usr/bin/llvm-config-3.4 /usr/local/bin/llvm-config
          ln -s /usr/bin/llvm-extract-3.4 /usr/local/bin/llvm-extract
          ln -s /usr/bin/opt-3.4 /usr/bin/opt
          ln -s /usr/bin/llc-3.4 /usr/bin/llc
          ln -s /usr/bin/clang /usr/lib/llvm-3.4/bin/clang

      - name: Manually install Python packages
        run: |
          # NOTE Installing with pip causes SNI issues on Ubuntu 14.04 + Python 2.7.6
          # See: https://serverfault.com/questions/1059132/use-sni-with-pip-pypi-on-ubuntu-14-trusty
          wget https://files.pythonhosted.org/packages/3a/74/0d6744ac87cbe9773be70917381d1834ac44015af7b6fa5cbc07b61abf03/PuLP-2.6.0.tar.gz
          tar -xvf PuLP-2.6.0.tar.gz
          cd PuLP-2.6.0
          python setup.py install
          cd ..
          wget https://files.pythonhosted.org/packages/60/bf/62567830b700d9f6930e9ab6831d6ba256f7b0b730acb37278b0ccdffacf/pydotplus-2.0.2.tar.gz
          tar -xvf pydotplus-2.0.2.tar.gz
          cd pydotplus-2.0.2
          python setup.py install
          cd ..

      - name: Get dragonegg
        run: |
          wget http://llvm.org/releases/3.4/dragonegg-3.4.src.tar.gz --no-check-certificate
          tar xvf dragonegg-3.4.src.tar.gz
          cd dragonegg-3.4
          GCC=gcc-4.6 make
          cp dragonegg.so /usr/local/lib/

      - name: Get rvm & rdiscount
        run: |
          apt-get install -y software-properties-common
          add-apt-repository -y ppa:rael-gc/rvm
          apt-get -y update
          apt-get -y install rvm
          gem install --user-install executable-hooks

      - name: Build & install CERE
        run: |
          # NOTE To generate doc wit ronn, we need to set locale to UTF-8 English
          apt-get -y install locales
          locale-gen --no-purge en_US.UTF-8
          export LANG="en_US.UTF-8"
          export LANGUAGE="en_US:en"
          export LC_ALL="en_US.UTF-8"
          ./autogen.sh
          ./configure --with-dragonegg=/usr/local/lib/dragonegg.so CC=gcc-4.6 CXX=g++-4.6
          make
          make install

      - name: Run CERE tests
        run: |
          make check

      - name : Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.sha}}_test.log
          path: tests/testplan.log
